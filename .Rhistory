mirror <- function(m, arg1="arg1", arg2="arg2")
{
return(m)
}
mirror("hovno")
mirror(&*)
mirror(8)
mirror(8098890)
mirror
mirror <- function(m, arg1="arg1", arg2="arg2")
{
return("jdete vsichni do prdele")
}
mirror <- function(m, arg1="arg1", arg2="arg2")
{
return("jdete vsichni do prdele")
}
mirror(33)
summaryStatistics
library("alldatabrowser", lib.loc="C:/Users/hulek/Documents/R/win-library/3.0")
summaryStatistics
summaryStatistics(records=a)
summaryStatistics(records=10)
ls(a)
ls("asd")
ls("karel")
class("asd")
mirror <- function(m, arg1="arg1", arg2="arg2")
{
return class(m)
}
mirror <- function(m, arg1="arg1", arg2="arg2")
{
class(m);
}
mirror("asd")
mirror(9)
mirror <- function(records, arg1="arg1", arg2="arg2")
{
class(records);
nrow(records);
}
mirror(9)
mirror(c(9,9))
mirror <- function(records, arg1="arg1", arg2="arg2")
{
class(records);
}
mirror(9)
mirror <- function(records, arg1="arg1", arg2="arg2")
{
class(records);
return nrow(records);
}
mirror <- function(records, arg1="arg1", arg2="arg2")
{
class(records);
return <- nrow(records);
}
mirror <- function(records, arg1="arg1", arg2="arg2")
{
class(records);
return (nrow(records));
}
mirror(12)
mirror(list("as","as"))
mirror(list("as","as"))
nrow
mirror <- function(records, arg1="arg1", arg2="arg2")
{
class(records);
return (length(records));
}
mirror(list("as","as"))
ss<-function(records=NULL,centralValueType="median",whiskerValueType="5_95",transformationType="none") {
library(alldatabrowser)
library(genasis)
whisk<-c("5_95","25_75","min_max","2iq","ci")
whisl<-c("quantile05","quantile25","min","iql","cil")
whisu<-c("quantile95","quantile75","max","iqu","ciu")
centv<-c("mean","median","geomean")
centf<-c("arimean","quantile50","geomean")
f1<-centf[which(centv==centralValueType)]
f2<-whisl[which(whisk==whiskerValueType)]
f3<-whisu[which(whisk==whiskerValueType)]
results<-list()
for (i in 1:(length(records)-1) {
loca<-as.character(records[i,1])
data<-as.data.frame(records[i,2])
# Nahrada LoQ polovinami limitu
valu<-data$value
valu[which(is.na(valu)&data$loqMethodCode=="INS")]<-data$loqValue[which(is.na(valu))]*1/2
# Logaritmicka transformace
if (transformationType=="log") {
valu<-log(valu)
}
# Jednotky musi byt stejne
if (length(unique(data$unit))>1) {
stop()
} else {
unit<-unique(data$unit)
}
result<-list(label=loca,
n=nrow(data),
nUnderLOQ=length(which(is.na(data$value))),
unit=unit,
centralValue=sapply(list(valu),FUN=f1),
centralValueType=centralValueType,
whiskerTopValue=sapply(list(valu),FUN=f3),
whiskerBottomValue=sapply(list(valu),FUN=f2),
whiskerType=whiskerValueType)
results<-as.list(c(results,list(result)))
}
return(results)
}
ss<-function(records=NULL,centralValueType="median",whiskerValueType="5_95",transformationType="none") {
library(alldatabrowser)
library(genasis)
whisk<-c("5_95","25_75","min_max","2iq","ci")
whisl<-c("quantile05","quantile25","min","iql","cil")
whisu<-c("quantile95","quantile75","max","iqu","ciu")
centv<-c("mean","median","geomean")
centf<-c("arimean","quantile50","geomean")
f1<-centf[which(centv==centralValueType)]
f2<-whisl[which(whisk==whiskerValueType)]
f3<-whisu[which(whisk==whiskerValueType)]
results<-list()
for (i in 1:length(records)) {
loca<-as.character(records[i,1])
data<-as.data.frame(records[i,2])
# Nahrada LoQ polovinami limitu
valu<-data$value
valu[which(is.na(valu)&data$loqMethodCode=="INS")]<-data$loqValue[which(is.na(valu))]*1/2
# Logaritmicka transformace
if (transformationType=="log") {
valu<-log(valu)
}
# Jednotky musi byt stejne
if (length(unique(data$unit))>1) {
stop()
} else {
unit<-unique(data$unit)
}
result<-list(label=loca,
n=nrow(data),
nUnderLOQ=length(which(is.na(data$value))),
unit=unit,
centralValue=sapply(list(valu),FUN=f1),
centralValueType=centralValueType,
whiskerTopValue=sapply(list(valu),FUN=f3),
whiskerBottomValue=sapply(list(valu),FUN=f2),
whiskerType=whiskerValueType)
results<-as.list(c(results,list(result)))
}
return(results)
}
ss<-function(records=NULL,centralValueType="median",whiskerValueType="5_95",transformationType="none") {
library(alldatabrowser)
library(genasis)
whisk<-c("5_95","25_75","min_max","2iq","ci")
whisl<-c("quantile05","quantile25","min","iql","cil")
whisu<-c("quantile95","quantile75","max","iqu","ciu")
centv<-c("mean","median","geomean")
centf<-c("arimean","quantile50","geomean")
f1<-centf[which(centv==centralValueType)]
f2<-whisl[which(whisk==whiskerValueType)]
f3<-whisu[which(whisk==whiskerValueType)]
results<-list()
length<-length(records)-1
for (i in 1:length {
loca<-as.character(records[i,1])
data<-as.data.frame(records[i,2])
# Nahrada LoQ polovinami limitu
valu<-data$value
valu[which(is.na(valu)&data$loqMethodCode=="INS")]<-data$loqValue[which(is.na(valu))]*1/2
# Logaritmicka transformace
if (transformationType=="log") {
valu<-log(valu)
}
# Jednotky musi byt stejne
if (length(unique(data$unit))>1) {
stop()
} else {
unit<-unique(data$unit)
}
result<-list(label=loca,
n=nrow(data),
nUnderLOQ=length(which(is.na(data$value))),
unit=unit,
centralValue=sapply(list(valu),FUN=f1),
centralValueType=centralValueType,
whiskerTopValue=sapply(list(valu),FUN=f3),
whiskerBottomValue=sapply(list(valu),FUN=f2),
whiskerType=whiskerValueType)
results<-as.list(c(results,list(result)))
}
return(results)
}
ss<-function(records=NULL,centralValueType="median",whiskerValueType="5_95",transformationType="none") {
library(alldatabrowser)
library(genasis)
whisk<-c("5_95","25_75","min_max","2iq","ci")
whisl<-c("quantile05","quantile25","min","iql","cil")
whisu<-c("quantile95","quantile75","max","iqu","ciu")
centv<-c("mean","median","geomean")
centf<-c("arimean","quantile50","geomean")
f1<-centf[which(centv==centralValueType)]
f2<-whisl[which(whisk==whiskerValueType)]
f3<-whisu[which(whisk==whiskerValueType)]
results<-list()
length<-length(records)-1;
for (i in 1:length {
loca<-as.character(records[i,1])
data<-as.data.frame(records[i,2])
# Nahrada LoQ polovinami limitu
valu<-data$value
valu[which(is.na(valu)&data$loqMethodCode=="INS")]<-data$loqValue[which(is.na(valu))]*1/2
# Logaritmicka transformace
if (transformationType=="log") {
valu<-log(valu)
}
# Jednotky musi byt stejne
if (length(unique(data$unit))>1) {
stop()
} else {
unit<-unique(data$unit)
}
result<-list(label=loca,
n=nrow(data),
nUnderLOQ=length(which(is.na(data$value))),
unit=unit,
centralValue=sapply(list(valu),FUN=f1),
centralValueType=centralValueType,
whiskerTopValue=sapply(list(valu),FUN=f3),
whiskerBottomValue=sapply(list(valu),FUN=f2),
whiskerType=whiskerValueType)
results<-as.list(c(results,list(result)))
}
return(results)
}
ss<-function(records=NULL,centralValueType="median",whiskerValueType="5_95",transformationType="none") {
library(alldatabrowser)
library(genasis)
whisk<-c("5_95","25_75","min_max","2iq","ci")
whisl<-c("quantile05","quantile25","min","iql","cil")
whisu<-c("quantile95","quantile75","max","iqu","ciu")
centv<-c("mean","median","geomean")
centf<-c("arimean","quantile50","geomean")
f1<-centf[which(centv==centralValueType)]
f2<-whisl[which(whisk==whiskerValueType)]
f3<-whisu[which(whisk==whiskerValueType)]
results<-list()
len<-length(records)-1;
for (i in 1:len) {
loca<-as.character(records[i,1])
data<-as.data.frame(records[i,2])
# Nahrada LoQ polovinami limitu
valu<-data$value
valu[which(is.na(valu)&data$loqMethodCode=="INS")]<-data$loqValue[which(is.na(valu))]*1/2
# Logaritmicka transformace
if (transformationType=="log") {
valu<-log(valu)
}
# Jednotky musi byt stejne
if (length(unique(data$unit))>1) {
stop()
} else {
unit<-unique(data$unit)
}
result<-list(label=loca,
n=nrow(data),
nUnderLOQ=length(which(is.na(data$value))),
unit=unit,
centralValue=sapply(list(valu),FUN=f1),
centralValueType=centralValueType,
whiskerTopValue=sapply(list(valu),FUN=f3),
whiskerBottomValue=sapply(list(valu),FUN=f2),
whiskerType=whiskerValueType)
results<-as.list(c(results,list(result)))
}
return(results)
}
summaryStatistics<-function(records=NULL,centralValueType="median",whiskerValueType="5_95",transformationType="none") {
library(alldatabrowser)
library(genasis)
whisk<-c("5_95","25_75","min_max","2iq","ci")
whisl<-c("quantile05","quantile25","min","iql","cil")
whisu<-c("quantile95","quantile75","max","iqu","ciu")
centv<-c("mean","median","geomean")
centf<-c("arimean","quantile50","geomean")
f1<-centf[which(centv==centralValueType)]
f2<-whisl[which(whisk==whiskerValueType)]
f3<-whisu[which(whisk==whiskerValueType)]
results<-list()
for (i in 1:nrow(records)) {
loca<-as.character(records[i,1])
data<-as.data.frame(records[i,2])
# Nahrada LoQ polovinami limitu
valu<-data$value
valu[which(is.na(valu)&data$loqMethodCode=="INS")]<-data$loqValue[which(is.na(valu))]*1/2
# Logaritmicka transformace
if (transformationType=="log") {
valu<-log(valu)
}
# Jednotky musi byt stejne
if (length(unique(data$unit))>1) {
stop()
} else {
unit<-unique(data$unit)
}
result<-list(label=loca,
n=nrow(data),
nUnderLOQ=length(which(is.na(data$value))),
unit=unit,
centralValue=sapply(list(valu),FUN=f1),
centralValueType=centralValueType,
whiskerTopValue=sapply(list(valu),FUN=f3),
whiskerBottomValue=sapply(list(valu),FUN=f2),
whiskerType=whiskerValueType)
results<-as.list(c(results,list(result)))
}
return(results)
}
sumStatTestDataStr = '[{"rowLabel":"Lokalita 0","values":[{"value":7.287,"loqValue":9.884,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":8},{"value":0.982,"loqValue":0.233,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":10},{"value":4.087,"loqValue":6.674,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":16},{"value":8.419,"loqValue":4.908,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":16},{"value":9.471,"loqValue":9.98,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":19}]},{"rowLabel":"Lokalita 1","values":[{"value":6.27,"loqValue":4.117,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":24},{"value":6.946,"loqValue":8.883,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":12},{"value":7.97,"loqValue":2.788,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":30},{"value":7.669,"loqValue":5.259,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":21},{"value":5.968,"loqValue":9.49,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":24}]},{"rowLabel":"Lokalita 2","values":[{"value":4.742,"loqValue":6.057,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":23},{"value":7.652,"loqValue":3.588,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":7},{"value":9.505,"loqValue":2.49,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":20},{"value":6.424,"loqValue":8.099,"loqMethodCode":"INS","unit":"ng_m3","dateTime":null,"timeLength":15}]}]'
sumStatTestData = jsonlite::fromJSON(sumStatTestDataStr2)
ss(sumStatTestData)
ss<-function(records=NULL,centralValueType="median",whiskerValueType="5_95",transformationType="none") {
library(alldatabrowser)
library(genasis)
whisk<-c("5_95","25_75","min_max","2iq","ci")
whisl<-c("quantile05","quantile25","min","iql","cil")
whisu<-c("quantile95","quantile75","max","iqu","ciu")
centv<-c("mean","median","geomean")
centf<-c("arimean","quantile50","geomean")
f1<-centf[which(centv==centralValueType)]
f2<-whisl[which(whisk==whiskerValueType)]
f3<-whisu[which(whisk==whiskerValueType)]
results<-list()
for (i in 1:nrow(records)) {
loca<-as.character(records[i,1])
data<-as.data.frame(records[i,2])
# Nahrada LoQ polovinami limitu
valu<-data$value
valu[which(is.na(valu)&data$loqMethodCode=="INS")]<-data$loqValue[which(is.na(valu))]*1/2
# Logaritmicka transformace
if (transformationType=="log") {
valu<-log(valu)
}
# Jednotky musi byt stejne
if (length(unique(data$unit))>1) {
stop()
} else {
unit<-unique(data$unit)
}
result<-list(label=loca,
n=nrow(data),
nUnderLOQ=length(which(is.na(data$value))),
unit=unit,
centralValue=sapply(list(valu),FUN=f1),
centralValueType=centralValueType,
whiskerTopValue=sapply(list(valu),FUN=f3),
whiskerBottomValue=sapply(list(valu),FUN=f2),
whiskerType=whiskerValueType)
results<-as.list(c(results,list(result)))
}
return(results)
}
ss(sumStatTestData)
ss(sumStatTestData)
sumStatTestData = jsonlite::fromJSON(sumStatTestDataStr2)
sumStatTestDataStr2= '[{"rowLabel":0,"values":[{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2012-05-27","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-02-24","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-08-26","timeLength":null},{"value":0.0065,"loqValue":0.013,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2010-11-25","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-11-26","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-05-26","timeLength":null}]},{"rowLabel":1,"values":[{"value":0.608224,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-08-10","timeLength":null},{"value":0.380574,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2012-04-18","timeLength":null},{"value":0.0065,"loqValue":0.013,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-01-17","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-11-02","timeLength":null},{"value":0.526299,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2012-01-25","timeLength":null}]}]'
sumStatTestData = jsonlite::fromJSON(sumStatTestDataStr2)
ss(sumStatTestData)
sumStatTestDataStr2= '[{"rowLabel":"Nooitgedacht\/the Republic of South Africa\/Passive ambient air and soil sampling Africa(6)","values":[{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2012-05-27 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2012-05-27","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-02-24 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2011-02-24","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-08-26 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2011-08-26","timeLength":null},{"value":0.0065,"loqValue":0.013,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2010-11-25 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2010-11-25","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-11-26 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2011-11-26","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-05-26 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2011-05-26","timeLength":null}]},{"rowLabel":"Khartoum\/the Republic of the Sudan\/Passive ambient air and soil sampling Africa(5)","values":[{"value":0.608224,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-08-10 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2011-08-10","timeLength":null},{"value":0.380574,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2012-04-18 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2012-04-18","timeLength":null},{"value":0.0065,"loqValue":0.013,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-01-17 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2011-01-17","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-11-02 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2011-11-02","timeLength":null},{"value":0.526299,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2012-01-25 00:00:00","timezone_type":3,"timezone":"Europe\/Berlin"},"dateTimeString":"2012-01-25","timeLength":null}]}]'
sumStatTestDataStr2= '[{"rowLabel":"Nooitgedacht__the Republic of South Africa__Passive ambient air and soil sampling Africa(6)","values":[{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2012-05-27 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2012-05-27","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-02-24 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2011-02-24","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-08-26 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2011-08-26","timeLength":null},{"value":0.0065,"loqValue":0.013,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2010-11-25 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2010-11-25","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-11-26 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2011-11-26","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-05-26 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2011-05-26","timeLength":null}]},{"rowLabel":"Khartoum__the Republic of the Sudan__Passive ambient air and soil sampling Africa(5)","values":[{"value":0.608224,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-08-10 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2011-08-10","timeLength":null},{"value":0.380574,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2012-04-18 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2012-04-18","timeLength":null},{"value":0.0065,"loqValue":0.013,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-01-17 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2011-01-17","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2011-11-02 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2011-11-02","timeLength":null},{"value":0.526299,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":{"date":"2012-01-25 00:00:00","timezone_type":3,"timezone":"Europe__Berlin"},"dateTimeString":"2012-01-25","timeLength":null}]}]'
sumStatTestData = jsonlite::fromJSON(sumStatTestDataStr2)
ss(sumStatTestData)
sumStatTestDataStr2= '[{"rowLabel":0,"values":[{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2012-05-27","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-02-24","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-08-26","timeLength":null},{"value":0.0065,"loqValue":0.013,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2010-11-25","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-11-26","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-05-26","timeLength":null}]},{"rowLabel":1,"values":[{"value":0.608224,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-08-10","timeLength":null},{"value":0.380574,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2012-04-18","timeLength":null},{"value":0.0065,"loqValue":0.013,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-01-17","timeLength":null},{"value":0.0510204,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2011-11-02","timeLength":null},{"value":0.526299,"loqValue":0.102041,"loqMethodCode":null,"unit":"ng sample-1","dateTime":null,"dateTimeString":"2012-01-25","timeLength":null}]}]'
sumStatTestData = jsonlite::fromJSON(sumStatTestDataStr2)
ss(sumStatTestData)
sumStatTestData = jsonlite::fromJSON(sumStatTestDataStr2)
sumStatTestData
sumStatTestData[0]
sumStatTestData[0]$rowLabel
sumStatTestData[1]$rowLabel
sumStatTestData[1]$values
sumStatTestData
class(sumStatTestData)
View(sumStatTestData)
sumStatTestData$0
sumStatTestData$rowLabel
sumStatTestData$rowLabel[0]
sumStatTestData[[1]]
sumStatTestData[1,1]
sumStatTestData[2,1]
sumStatTestData[2,2]
nrow(sumStatTestData)
nrow(sumStatTestData)
ss(sumStatTestData)
ss<-function(records,centralValueType="median",whiskerValueType="5_95",transformationType="none") {
return(nrow(records));
library(alldatabrowser)
library(genasis)
whisk<-c("5_95","25_75","min_max","2iq","ci")
whisl<-c("quantile05","quantile25","min","iql","cil")
whisu<-c("quantile95","quantile75","max","iqu","ciu")
centv<-c("mean","median","geomean")
centf<-c("arimean","quantile50","geomean")
f1<-centf[which(centv==centralValueType)]
f2<-whisl[which(whisk==whiskerValueType)]
f3<-whisu[which(whisk==whiskerValueType)]
results<-list()
for (i in 1:nrow(records)) {
loca<-as.character(records[i,1])
data<-as.data.frame(records[i,2])
# Nahrada LoQ polovinami limitu
valu<-data$value
valu[which(is.na(valu)&data$loqMethodCode=="INS")]<-data$loqValue[which(is.na(valu))]*1/2
# Logaritmicka transformace
if (transformationType=="log") {
valu<-log(valu)
}
# Jednotky musi byt stejne
if (length(unique(data$unit))>1) {
stop()
} else {
unit<-unique(data$unit)
}
result<-list(label=loca,
n=nrow(data),
nUnderLOQ=length(which(is.na(data$value))),
unit=unit,
centralValue=sapply(list(valu),FUN=f1),
centralValueType=centralValueType,
whiskerTopValue=sapply(list(valu),FUN=f3),
whiskerBottomValue=sapply(list(valu),FUN=f2),
whiskerType=whiskerValueType)
results<-as.list(c(results,list(result)))
}
return(results)
}
ss(sumStatTestData)
library("Kendall", lib.loc="C:/Users/hulek/Documents/R/win-library/3.0")
library(mirror)
